% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day_night.r
\name{calculate_day_night}
\alias{calculate_day_night}
\title{Calculate metrics for values inside and/or outside a specified time range.}
\usage{
calculate_day_night(
  data,
  FUN,
  after_hour = 0,
  before_hour = 6,
  calculate = c("inside", "outside", "both"),
  ...
)
}
\arguments{
\item{data}{DataFrame object with column names "id", "time", and "gl".}

\item{FUN}{Function to be applied to the filtered data.}

\item{after_hour}{Numeric between 0-24 signifying the hour at which the time range should start.}

\item{before_hour}{Numeric between 0-24 signifying the hour at which the time range should end.}

\item{calculate}{String determining whether FUN should be applied to values inside or outside the time range. Both separately is an option}

\item{...}{Optional arguments which will be passed to FUN}
}
\value{
An object of the same return type as FUN, with columns corresponding to the values returned by FUN. Separated for values inside or outside the time range, if calculate = both.
}
\description{
This function applies a given function to a subset of data filtered by time of day
}
\details{
An object of the same return type as FUN, with the same column names as FUN will be returned.
If calculate = "both", there will be columns for FUN applied to both inside and outside values,
with either "in range" or "out of range" append to signify whether the statistic was calculated on values
which were inside the time range or outside the range.

FUN is found by a call to match.fun and typically is either a function or a character string
specifying a function to be searched for from the environment of the call to apply.
Arguments in ... cannot have the same name as any of the other arguments, and care may be needed to avoid partial matching to FUN.
FUN is applied to the data after the data is filtered based on whether its hour falls within the given range.
If after_hour is an integer, all times within that hour will be included in the range, but if before_hour is an integer
only times up to that hour will be included in the range.
}
\examples{

data(example_data_1_subject)
calculate_day_night(example_data_1_subject, sd_glu)

data(example_data_5_subject)
calculate_day_night(example_data_5_subject, cogi, targets = c(80, 150), weights = c(.3,.2,.5))
calculate_day_night(example_data_5_subject, sd_measures, after_hour = 2, before_hour = 8, calculate = "both")

}
